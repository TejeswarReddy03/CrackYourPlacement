## Binary Tree Zigzag Level Order Traversal

https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        if(root==NULL){
            return {};
        }
        queue<TreeNode*> q;
        q.push(root);
        bool flag=true;
        vector<vector<int>> ans;
        while(!q.empty()){
             vector<int> lev;
             int size=q.size();
            for(int i=0;i<size;i++){
               
            TreeNode* front = q.front();
            q.pop();
            lev.push_back(front->val);
            if(front->left!=NULL){
            q.push(front->left);
            }
            
            if(front->right!=NULL){
            q.push(front->right);
            }


            }
            if(flag==true){

                flag=false;
            }
            else{
               reverse(lev.begin(),lev.end());
               flag=true;
            }
            ans.push_back(lev);
            
            

        }
        return ans;
    }
};
