112. Path Sum

https://leetcode.com/problems/path-sum/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool hasPathSums(TreeNode* root, int targetSum) {
        if(root==NULL ){
            return false;
        }
        if(targetSum==root->val && root->left==NULL && root->right==NULL){
            return true;
        }
        
        
       bool a = hasPathSums(root->right,targetSum-root->val);
       bool b = hasPathSums(root->left,targetSum-root->val);

        return a||b;

    }

    bool hasPathSum(TreeNode* root, int targetSum) {
        if(root==NULL){
            return false;

        }
        return hasPathSums(root,targetSum);
    }
};
