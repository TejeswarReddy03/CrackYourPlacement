## 110. Balanced Binary Tree

https://leetcode.com/problems/balanced-binary-tree/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
int maxDepth(TreeNode* root) {
        if(root==NULL){
            return 0;
        }
        int h1=maxDepth(root->left);
        int h2=maxDepth(root->right);
        return 1+max(h1,h2);
    }
    bool isBalanced(TreeNode* root) {
        if(root==NULL){
            return true;
        }
     
        return abs(maxDepth(root->left)-maxDepth(root->right))<=1  ?  isBalanced(root->left) && isBalanced(root->right):false;
    }
};
