## Bipartite Graph

https://www.geeksforgeeks.org/problems/bipartite-graph/1

//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution {
public:
    bool ans=true;
    void helper(int V, vector<int>adj[], vector<int>& vis, int a){
        vis[V]=a;
        for(auto x:adj[V]){
            if(vis[x]==-1){
               
                if(a==0){
                helper(x,adj,vis,1);
                }
                else{
                    helper(x,adj,vis,0);
                }
            }
            else{
                if(a==1){
                    if(vis[x]==1){
                        ans= false;
                    }
                    
                }
                else{
                    if(vis[x]==0){
                        ans= false;
                    }
                }
            }
            
        }
        
    }
    
    
	bool isBipartite(int V, vector<int>adj[]){
	    // Code here
	    vector<int> vis(V,-1);
	    for(int i=0;i<V;i++){
	        if(vis[i]==-1){
	            
	            helper(i,adj,vis,0);
	             
	            
	        }
	    }
	    return ans;
	    
	    
	    
	}

};

//{ Driver Code Starts.
int main(){
	int tc;
	cin >> tc;
	while(tc--){
		int V, E;
		cin >> V >> E;
		vector<int>adj[V];
		for(int i = 0; i < E; i++){
			int u, v;
			cin >> u >> v;
			adj[u].push_back(v);
			adj[v].push_back(u);
		}
		Solution obj;
		bool ans = obj.isBipartite(V, adj);    
		if(ans)cout << "1\n";
		else cout << "0\n";  
	}
	return 0;
}
// } Driver Code Ends
