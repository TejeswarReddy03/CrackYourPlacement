## Sub TreeOf Another Tree

https://leetcode.com/problems/subtree-of-another-tree/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

    bool sub_solver(TreeNode* root, TreeNode* subRoot){
        if(root==NULL && subRoot==NULL){
            return true;
        }
        else if(root==NULL && subRoot!=NULL){
            return false;
        }
        else if(root!=NULL && subRoot==NULL){
            return false;
        }
        return root->val==subRoot->val?sub_solver(root->left,subRoot->left) && sub_solver(root->right,subRoot->right):false;
        

    }


    bool isSubtree(TreeNode* root, TreeNode* subRoot) {
        if(root==NULL){
            return false;
        }

     
     if(sub_solver(root,subRoot)){
        return true;
     }
     return isSubtree(root->left,subRoot)||isSubtree(root->right,subRoot);

        
    }
};
