## Palindrome Partitioning

https://leetcode.com/problems/palindrome-partitioning/

class Solution {
public:

    vector<vector<string>> ans;
    bool isPalindrome(string s){
        string y=s;
        reverse(s.begin(),s.end());
        cout<<y<<endl;
        cout<<s;
        return y==s;
    }

    void helper(string &s, string k, int index, vector<string> &a){
        if(index==s.size()){
            ans.push_back(a);
            return;
        }
        string b="";
        for(int i=index;i<s.size();i++){
            b+=s[i];
            if(isPalindrome(b)){
                a.push_back(b);
                helper(s,k,i+1,a);
                a.pop_back();
            }

        }
        


    }


    vector<vector<string>> partition(string s) {
        string k="";
        vector<string> a1;
        helper(s,k,0,a1);
        return ans;
    }
};
