## Vertical Order Traversal Of Binary Tree

https://leetcode.com/problems/vertical-order-traversal-of-a-binary-tree/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> verticalTraversal(TreeNode* root) {
        queue<pair<TreeNode*,pair<int,int >>> q;
        map<int,map<int,multiset<int>>> m;
        q.push({root,{0,0}});
        while(!q.empty()){
            auto front = q.front();
            q.pop();
            int line = front.second.first;
                int lev = front.second.second;
            if(front.first->left!=NULL){
                q.push({front.first->left,{line-1,lev+1}});
            }
            if(front.first->right!=NULL){
                q.push({front.first->right,{line+1,lev+1}});
            }
            // cout<<front.first->val<<endl;
                m[line][lev].insert(front.first->val);
        }
        vector<vector<int>> ans;
        for(auto i:m){
            vector<int> sub;
            for(auto j:i.second){
                for(auto y:j.second){
                    sub.push_back(y);
                }
                // sub.insert(sub.end(),j.second.begin(),j.second.end());
            }
            ans.push_back(sub);
        }
        
     return ans;
    }
};
