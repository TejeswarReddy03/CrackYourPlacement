## Product Array Puzzle

https://www.geeksforgeeks.org/problems/product-array-puzzle4525/1

//{ Driver Code Starts
//Initial template for C++

#include<bits/stdc++.h>
using namespace std;



// } Driver Code Ends
//User function template for C++

class Solution{
  public:
    // nums: given vector
    // return the Product vector P that hold product except self at each index
    vector<long long int> productExceptSelf(vector<long long int>& nums, int n) {
        vector<long long int> prefix(nums.size(),1);
        vector<long long int> suffix(nums.size(),1);
        // prefix.push_back(nums[0]);
        // prefix[0]=nums[0];
        if(nums.size()==1){
            return {1};
        }
        prefix[0]=nums[0];
        for(int i=1;i<nums.size();i++){
            prefix[i]=prefix[i-1]*nums[i];
            // cout<< prefix[i]<<endl;
        }
        suffix[nums.size()-1]=nums[nums.size()-1];
        for(int i=nums.size()-2;i>=0;i--){
            suffix[i]=suffix[i+1]*nums[i];
        }
        
        
        vector<long long int> ans;
        ans.push_back(suffix[1]);
        for(int i=1;i<nums.size()-1;i++){
            ans.push_back(prefix[i-1]*suffix[i+1]);
        }
        ans.push_back(prefix[nums.size()-2]);
        return ans;
        
        
        
       
        //code here        
    }
};


